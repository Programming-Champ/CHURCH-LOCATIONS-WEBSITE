<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add/Modify Place</title>
    <link rel="stylesheet" href="assets/css/style.css">
</head>
<body>
    <!-- Header for navigation -->
    <div class="header sticky">
        <img src="assets/images/sda2.png" alt="Logo" class="logo">
        <h1>Seventh-day Adventist Church Locations</h1>
        <nav class="navbar">
            <a href="index.html">Home</a>
            <a href="about.html">About</a>
            <a href="addModifyPlace.html">Add/Modify Place</a>
        </nav>
        <div class="hamburger" id="hamburger-icon">â˜°</div>

        <div class="header-words" id="header-words">
            <a href="index.html" class="header-link" data-page="home">Home</a>
            <a href="about.html" class="header-link" data-page="about">About</a>
            <a href="addModifyPlace.html" class="header-link" data-page="addModify">Add/Modify Place</a>
            <!-- Add more links as needed -->
        </div>
    </div>

    <!-- Main content container -->
    <div class="content">
        <form id="missionForm" onsubmit="handleSubmit(event)">
            <p>We highly appreciate your willingness to be a part of the many volunteers who desire that the gospel should reach every part of Kenya.</p>
            
            <!-- Add hidden inputs for latitude and longitude -->
            <input type="hidden" id="latitude" name="latitude">
            <input type="hidden" id="longitude" name="longitude">


            <!-- Image, Name, and Email Section -->
            <div class="form-section">
                <img src="assets/images/ch2.jfif" alt="Default Image" id="main-image" class="main-image">
            </div>
            <div class="form-section">    
                <label for="name">Name:<span style="color: red;">*</span></label>
                <input type="text" id="name" name="name" required>

                <label for="email">Email:<span style="color: red;">*</span></label>
                <input type="email" id="email" name="email" required>
            </div>

            <!-- Option Selection and Conditional Form Elements -->
            <div class="form-section">
                <label for="option-select">Select Option:</label>
                <select id="option-select" onchange="showFormSections()">
                    <option value="">--Select Option--</option>
                    <option value="addChurch">Add a missing church</option>
                    <option value="modifyChurch">Modify church location</option>
                    <option value="pastMission">Past mission site</option>
                    <option value="proposeMission">Propose new mission site</option>
                </select>
                

                <!-- Section for Add/Modify Church -->
                <div id="church-section" class="conditional-section" style="display:none;">
                    <label for="church-name">Church Name:<span style="color: red;">*</span></label>
                    <input type="text" id="church-name" name="church-name" placeholder="e.g SDA church Nairobi Central">
                    
                    <div class="location-section">
                        <span>Choose location:</span>
                        <button type="button" onclick="openMapModal()">Pick Location</button>
                    </div>
                    
                    <label for="conference">Conference or Field:<span style="color: red;">*</span></label>
                    <input type="text" id="conference" name="conference" oninput="fetchSuggestions('conference', this.value)">
                    <ul id="conference-suggestions" class="suggestions"></ul>
   
                    <label for="county">County<span style="color: red;">*</span></label>
                    <input type="text" id="county" name="county" oninput="fetchSuggestions('county', this.value)">
                    <ul id="county-suggestions" class="suggestions"></ul>
                </div>

                <!-- Section for Past Mission Site -->
                <div id="past-mission-section" class="conditional-section" style="display:none;">
                    <label for="mission-name">Name of Evangelist/Missionaries/Church:<span style="color: red;">*</span></label>
                    <input type="text" id="mission-name" name="mission-name">
                    
                    <label for="conference-past">Conference or Field:<span style="color: red;">*</span></label>
                    <input type="text" id="conference-past" name="conference-past">
                    <ul id="conference-suggestions-past" class="suggestions"></ul>
                    
                    <div class="location-section">
                        <span>Choose location:<span style="color: red;">*</span></label>
                        <button type="button" onclick="openMapModal()">Pick Location</button>
                    </div>

                    <label for="start-date">Start Date:<span style="color: red;">*</span></label>
                    <input type="date" id="start-date" name="start-date">
                    
                    <label for="end-date">End Date:<span style="color: red;">*</span></label>
                    <input type="date" id="end-date" name="end-date">
                </div>

                <!-- Section for Propose New Mission Site -->
                <div id="propose-mission-section" class="conditional-section" style="display:none;">
                    <label for="nearby-churches">SDA Churches nearby:<span style="color: red;">*</span></label>
                    <input type="text" id="nearby-churches" name="nearby-churches" placeholder="e.g SDA church Nairobi Central">
                    
                    <label for="conference-propose">Conference or Field:<span style="color: red;">*</span></label>
                    <input type="text" id="conference-propose" name="conference-propose" oninput="fetchSuggestions('conference', this.value)">
                    <ul id="conference-suggestions-propose" class="suggestions"></ul>
                    
                    <div class="location-section">
                        <span>Choose location:</span>
                        <button type="button" onclick="openMapModal()">Pick Location</button>
                    </div>
                </div>
            </div>

            <!-- Submit Button -->
            <button type="submit">Submit</button>
        </form>
    </div>

    <!-- Modal for Google Map -->
    <div id="mapModal" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close" onclick="closeMapModal()">&times;</span>
            <div id="map" style="height: 400px; width: 100%;"></div>
        </div>
    </div>

    <script>
        // Initialize Google Map
        let map, marker;
        let selectedLocation = { lat: -1.2921, lng: 36.8219 }; // Default location

        function initMap() {
            map = new google.maps.Map(document.getElementById("map"), {
                center: selectedLocation,
                zoom: 8
            });

            map.addListener("click", (e) => {
                placeMarkerAndPanTo(e.latLng);
            });
        }

        function placeMarkerAndPanTo(latLng) {
            if (marker) {
                marker.setPosition(latLng);
            } else {
                marker = new google.maps.Marker({
                    position: latLng,
                    map: map
                });
            }
            selectedLocation = latLng; // Store selected location
            map.panTo(latLng);
            // Set the hidden inputs with the selected coordinates
            document.getElementById('latitude').value = latLng.lat();
            document.getElementById('longitude').value = latLng.lng();
        }


        function openMapModal() {
            document.getElementById("mapModal").style.display = "block";
            initMap();
        }

        function closeMapModal() {
            document.getElementById("mapModal").style.display = "none";
        }

        function showFormSections() {
            const selectedOption = document.getElementById('option-select').value;
            document.querySelectorAll('.conditional-section').forEach(section => section.style.display = 'none');

            if (selectedOption === 'addChurch' || selectedOption === 'modifyChurch') {
                document.getElementById('church-section').style.display = 'block';
            } else if (selectedOption === 'pastMission') {
                document.getElementById('past-mission-section').style.display = 'block';
            } else if (selectedOption === 'proposeMission') {
                document.getElementById('propose-mission-section').style.display = 'block';
            }
        }

        function fetchSuggestions(type, value) {
            console.log(`Fetching suggestions for ${type}: ${value}`);
            // Implement suggestion logic here
        }

        function handleSubmit(event) {
            event.preventDefault(); // Prevent the default form submission

            // Check required fields
            if (!validateForm()) {
                alert("Please fill all required fields.");
                return;
            }

            const formData = {
                email: document.getElementById('email').value,
                name: document.getElementById('name').value,
                churchName: document.getElementById('church-name').value,
                conference: document.getElementById('conference').value || document.getElementById('conference-past').value || document.getElementById('conference-propose').value,
                county: document.getElementById('county').value,
                location: selectedLocation,
                evangelistName: document.getElementById('mission-name').value,
                startDate: document.getElementById('start-date').value,
                endDate: document.getElementById('end-date').value,
                nearbyChurches: document.getElementById('nearby-churches').value
            };

            // Call the backend API to save the data
            fetch('http://127.0.0.1:5000/submit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                alert('Form submitted successfully');
                document.getElementById("missionForm").reset(); // Reset the form after successful submission
                closeMapModal(); // Close the map modal if open
            })
            .catch(error => {
                console.error('Error:', error);
                alert('There was an error submitting the form. Please try again later.');
            });
        }

        function validateForm() {
    const nameField = document.getElementById('name');
    const emailField = document.getElementById('email');
    const selectedOption = document.getElementById('option-select').value;
    let requiredFields = [nameField, emailField]; // Always required

    // Conditional required fields based on selected option
    if (selectedOption === 'addChurch' || selectedOption === 'modifyChurch') {
        requiredFields.push(
            document.getElementById('church-name'),
            document.getElementById('conference'),
            document.getElementById('county')
        );
    } else if (selectedOption === 'pastMission') {
        requiredFields.push(
            document.getElementById('mission-name'),
            document.getElementById('conference-past'),
            document.getElementById('start-date'),
            document.getElementById('end-date')
        );
    } else if (selectedOption === 'proposeMission') {
        requiredFields.push(
            document.getElementById('nearby-churches'),
            document.getElementById('conference-propose')
        );
    }

    // Check if all required fields are filled
    for (let field of requiredFields) {
        if (!field || field.value.trim() === '') {
            return false;
        }
    }
    return true;
}


        document.getElementById('hamburger-icon').onclick = function() {
            const words = document.getElementById('header-words');
            words.style.display = words.style.display === "none" ? "block" : "none";
        };

        // Load Google Maps API script
        const script = document.createElement('script');
        script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyA4ONHbGagh4LogQeeH_qvrzzqLQ11o_74&callback=initMap";
        document.head.appendChild(script);
    </script>
</body>
</html>
